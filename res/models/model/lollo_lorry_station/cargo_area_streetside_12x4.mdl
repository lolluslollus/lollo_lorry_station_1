function data()
	local mdlHelpers = require('lollo_lorry_station.mdlHelpers')
	local _cargoPlatformZ = -0.03

	return {
        boundingInfo = mdlHelpers.getAnythingStreetside12x4BoundingInfo(),
		-- collider = mdlHelpers.getAnythingStreetside12x4Collider(),
        collider = mdlHelpers.getVoidCollider(),
		lods = {
			{
				node = {
					children = {
						{
							-- materials = { "street/new_medium_sidewalk_border_inner.mtl", "street/new_medium_sidewalk.mtl", },
							materials = {'street/new_medium_sidewalk.mtl', 'street/new_medium_sidewalk.mtl'},
							mesh = 'lollo_lorry_station/tarmac_12x4.msh',
							transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -6, -2, _cargoPlatformZ, 1, },
						},
						{
							materials = { 'lollo_lorry_station/power_pole.mtl' },
							mesh = 'lollo_lorry_station/cargo_roof_grid_4x4.msh',
							transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -6, -2, _cargoPlatformZ, 1, },
						},
						{
							materials = { 'lollo_lorry_station/power_pole.mtl' },
							mesh = 'lollo_lorry_station/cargo_roof_grid_4x4.msh',
							transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, -2, -2, _cargoPlatformZ, 1, },
						},
						{
							materials = { 'lollo_lorry_station/power_pole.mtl' },
							mesh = 'lollo_lorry_station/cargo_roof_grid_4x4.msh',
							transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, -2, _cargoPlatformZ, 1, },
						},
						-- waypoint post, just for testing.
						-- transf[15] = -0.3 puts the height level with the stock waypoint
						-- {
						-- 	materials = { "street/signal_waypoint_road/signal_waypoint_road.mtl", },
						-- 	mesh = "street/signal_waypoint_road/signal_waypoint_road_lod0.msh",
						-- 	transf = { 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1.1000000238419, -0.3, 1, },
						-- },
					},
					name = "RootNode",
					transf = { 1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1, },
				},
				static = false,
				visibleFrom = 0,
				visibleTo = 1000,
			},
		},
		metadata = {
			transportNetworkProvider = {
				laneLists = mdlHelpers.getLaneLists12x4NormalCapacity(),
				runways = { },
				terminals = {
					{
						personEdges = { 0 },
						personNodes = { 0, 1 },
						-- vehicleNode = 2,
					},
				},
			},
		},
		version = 1,
	}
end
